DROP TABLE IF EXISTS FRIENDSHIP;
DROP TABLE IF EXISTS LIKED;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FILM_GENRES;
DROP TABLE IF EXISTS FILM_RATING;
DROP TABLE IF EXISTS FILM;
DROP TABLE IF EXISTS RATING;
DROP TABLE IF EXISTS GENRES;

CREATE TABLE IF NOT EXISTS USERS(
    USER_ID INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL VARCHAR(50) NOT NULL ,
    LOGIN VARCHAR(50) NOT NULL ,
    NAME VARCHAR(50) NOT NULL ,
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP(
    USER_ID1 INT NOT NULL ,
    USER_ID2 INT NOT NULL ,
    CONFIRMED BOOLEAN NOT NULL ,
    CONSTRAINT PK_FRIENDSHIP PRIMARY KEY (USER_ID1,USER_ID2),
    CONSTRAINT FK_FRIENDSHIP_USER_ID1 FOREIGN KEY (USER_ID1) REFERENCES USERS(USER_ID) ON DELETE CASCADE ,
    CONSTRAINT FK_FRIENDSHIP_USER_ID2 FOREIGN KEY (USER_ID2) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES(
      GENRE_ID INT PRIMARY KEY AUTO_INCREMENT,
      GENRE VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS RATING(
      RATING_ID INT PRIMARY KEY AUTO_INCREMENT,
      TITLE VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM (
    FILM_ID INT PRIMARY KEY AUTO_INCREMENT,
    TITLE VARCHAR(50),
    DESCRIPTION VARCHAR(300),
    RELEASE_DATE DATE,
    DURATION FLOAT
);

CREATE TABLE IF NOT EXISTS FILM_GENRES(
     FILM_ID INT ,
     GENRE_ID INT ,
     CONSTRAINT FK_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON DELETE CASCADE ,
     CONSTRAINT FK_GENRE_ID FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_RATING(
    FILM_ID INT,
    RATING_ID INT,
    CONSTRAINT FK_RATING_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON DELETE CASCADE ,
    CONSTRAINT FK_RATING_RATING_ID FOREIGN KEY (RATING_ID) REFERENCES RATING(RATING_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKED (
    FILM_ID INT,
    USER_ID INT,
    CONSTRAINT FK_LIKED_FILM_ID FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID),
    CONSTRAINT FK_LIKE_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);